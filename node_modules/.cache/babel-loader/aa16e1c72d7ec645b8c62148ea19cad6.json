{"ast":null,"code":"var _jsxFileName = \"/Users/nanazgl/Desktop/final 3/src/pages/ThemeSelector.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ThemeSelector.css';\nconst ThemeSelector = ({\n  themes,\n  onThemeSelect,\n  language\n}) => {\n  const [fetchedThemes, setFetchedThemes] = useState([]); // Declare setThemes function\n\n  useEffect(() => {\n    fetchThemes(language);\n  }, [language]);\n  const fetchThemes = async language => {\n    try {\n      const response = await axios.get(`http://localhost:3002/themes/${language}`);\n      setFetchedThemes(response.data); // Use setFetchedThemes to update themes\n    } catch (error) {\n      console.error('Error fetching themes', error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"theme-selector-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"theme-selector-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Select a Theme:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"theme-selector-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, fetchedThemes.map(theme => /*#__PURE__*/React.createElement(\"li\", {\n    key: theme.id,\n    className: \"theme-selector-item\",\n    onClick: () => onThemeSelect(theme.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, theme.name))));\n};\nexport default ThemeSelector; // Экспорт компонента ThemeSelector","map":{"version":3,"names":["React","useState","useEffect","axios","ThemeSelector","themes","onThemeSelect","language","fetchedThemes","setFetchedThemes","fetchThemes","response","get","data","error","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","theme","key","id","onClick","name"],"sources":["/Users/nanazgl/Desktop/final 3/src/pages/ThemeSelector.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ThemeSelector.css';\n\ninterface ThemeSelectorProps {\n    themes: any[]; // Define the type of the 'themes' prop\n    onThemeSelect: (selectedTheme: string) => void;\n    language: string;\n}\n\nconst ThemeSelector: React.FC<ThemeSelectorProps> = ({ themes, onThemeSelect, language }) => {\n    const [fetchedThemes, setFetchedThemes] = useState<any[]>([]); // Declare setThemes function\n\n    useEffect(() => {\n        fetchThemes(language);\n    }, [language]);\n\n    const fetchThemes = async (language: string) => {\n        try {\n            const response = await axios.get(`http://localhost:3002/themes/${language}`);\n            setFetchedThemes(response.data); // Use setFetchedThemes to update themes\n        } catch (error) {\n            console.error('Error fetching themes', error);\n        }\n    };\n\n    return (\n        <div className=\"theme-selector-container\">\n            <h2 className=\"theme-selector-title\">Select a Theme:</h2>\n            <ul className=\"theme-selector-list\">\n                {fetchedThemes.map((theme) => (\n                    <li\n                        key={theme.id}\n                        className=\"theme-selector-item\"\n                        onClick={() => onThemeSelect(theme.name)}\n                    >\n                        {theme.name}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default ThemeSelector; // Экспорт компонента ThemeSelector\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB;AAQ5B,MAAMC,aAA2C,GAAGA,CAAC;EAAEC,MAAM;EAAEC,aAAa;EAAEC;AAAS,CAAC,KAAK;EACzF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAQ,EAAE,CAAC,CAAC,CAAC;;EAE/DC,SAAS,CAAC,MAAM;IACZQ,WAAW,CAACH,QAAQ,CAAC;EACzB,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMG,WAAW,GAAG,MAAOH,QAAgB,IAAK;IAC5C,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,gCAA+BL,QAAS,EAAC,CAAC;MAC5EE,gBAAgB,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,oBACId,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAC,0BAA0B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrCvB,KAAA,CAAAgB,aAAA;IAAIC,SAAS,EAAC,sBAAsB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,iBAAmB,CAAC,eACzDvB,KAAA,CAAAgB,aAAA;IAAIC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC9Bf,aAAa,CAACgB,GAAG,CAAEC,KAAK,iBACrBzB,KAAA,CAAAgB,aAAA;IACIU,GAAG,EAAED,KAAK,CAACE,EAAG;IACdV,SAAS,EAAC,qBAAqB;IAC/BW,OAAO,EAAEA,CAAA,KAAMtB,aAAa,CAACmB,KAAK,CAACI,IAAI,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAExCE,KAAK,CAACI,IACP,CACP,CACD,CACH,CAAC;AAEd,CAAC;AAED,eAAezB,aAAa,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}